#!/bin/bash

# Dynamic Motd
# Robert Tulke, rt@debian.sh
# Modify by Peyman Goli -- Aban - 1398
## only root can start
if [ $(whoami) != root ]; then
    #cat /etc/motd
    exit 0
fi

## version
version="dynmotd v0.8"
fqdn=$(hostname --fqdn)

## some colors for a scheme
C_RED="\033[0;31m"
C_BLUE="\033[0;34m"
C_BLACK="\033[0;30m"
C_CYAN="\033[0;36m"
C_PINK="\033[0;35m"
C_GREY="\033[0;37m"
C_LGREEN="\033[1;32m"


## color schemes
# DOT, day of the tentacle scheme
F1=${C_GREY}
F2=${C_PINK}
F3=${C_LGREEN}
F4=${C_RED}

## time of day
HOUR=$(date +"%H")
if [ $HOUR -lt 12  -a $HOUR -ge 0 ]
then    TIME="morning"
elif [ $HOUR -lt 17 -a $HOUR -ge 12 ]
then    TIME="afternoon"
else
    TIME="evening"
fi

## System uptime
uptime=`cat /proc/uptime | cut -f1 -d.`
upDays=$((uptime/60/60/24))
upHours=$((uptime/60/60%24))
upMins=$((uptime/60%60))
upSecs=$((uptime%60))

## System load
LOAD1=`cat /proc/loadavg | awk {'print $1'}`
LOAD5=`cat /proc/loadavg | awk {'print $2'}`
LOAD15=`cat /proc/loadavg | awk {'print $3'}`

## Storage Data
ROOT=`df -Ph | grep root | awk '{print $4}' | tr -d '\n'`
HOME=`df -Ph | grep home | awk '{print $4}' | tr -d '\n'`
VAR=`df -Ph | grep var | awk '{print $4}' | tr -d '\n'`

## get my terminal
MYTTY=$(tty |sed 's/\/dev\///')

## get my hostname
MYHOST=$(who |egrep $MYTTY |awk -F '[()]' {'print $2'})

## extract my apn from fqdn
APN=$(echo $MYHOST |awk -F '()' '{print $1}')

## get current procs
PROCCOUNT=$(ps -Afl |egrep -v 'ps|wc' |wc -l)

## get maxium usable procs
PROCMAX=$(ulimit -u)

## how many ssh super user (root) are there
SUPERUSERCOUNT=$(cat /root/.ssh/authorized_keys |egrep '^ssh-' |wc -l)

## who is super user (ignore root@)
SUPERUSER=$(cat /root/.ssh/authorized_keys |egrep '^ssh-' |egrep -v 'root\@|^$|^.$' |awk '{if ($0) print}' |awk {'print $3" "$4'} |sed 's/@.*$//g'| awk -F [.] {'print $1'} |awk -vq=" " 'BEGIN{printf""}{printf(NR>1?",":"")q$0q}END{print""}' |cut -c2- |sed 's/ ,/,/g' |sed '1,$s/\([^,]*,[^,]*,[^,]*,[^,]*,[^,]*,\)/\1\n\\033[1;32m\t          /g')
#awk -vq=" " 'BEGIN{printf""}{printf(NR>1?",":"")q$0q}END{print""}' |cut -c2- |sed 's/ ,/,/g' |sed '1,$s/\([^,]*,[^,]*,[^,]*,[^,]*,\)/\1\n\\033[1;32m\t          /g' |sed 's/\b\(.\)/\u\1/g')

## how many system users are there, only check uid <1000 and has a login shell
SYSTEMUSERCOUNT=$(cat /etc/passwd |egrep '\:x\:10[0-9][0-9]' |grep '\:\/bin\/bash' |wc -l)

## who is a system user, only check uid <1000 and has a login shell
SYSTEMUSER=$(cat /etc/passwd |egrep '\:x\:10[0-9][0-9]' |egrep '\:\/bin\/bash|\:\/bin/sh' |awk '{if ($0) print}' |awk -F ':' {'print $1'} |awk -vq=" " 'BEGIN{printf""}{printf(NR>1?",":"")q$0q}END{print""}' |cut -c2- |sed 's/ ,/,/g' |sed '1,$s/\([^,]*,[^,]*,[^,]*,[^,]*,[^,]*,\)/\1\n\\033[1;32m\t          /g')

## print any authorized ssh-key-user of a existing system user
KEYUSER=$(for i in $(cat /etc/passwd |egrep '\:x\:10[0-9][0-9]' |awk -F ':' {'print $6'}) ; do cat $i/.ssh/authorized_keys  2> /dev/null |grep ^ssh- |awk '{print substr($0, index($0,$3)) }'; done |sed 's/@.*$//g'| awk -F [.] {'print $1 $2'} |sed 's/\b\(.\)/\u\1/g' |awk -vq=" " 'BEGIN{printf""}{printf(NR>1?",":"")q$0q}END{print""}' |cut -c2- |sed 's/ , /, /g' |sed '1,$s/\([^,]*,[^,]*,[^,]*,[^,]*,\)/\1\n\\033[1;32m\t           /g'  )

## not working
KEYUSERCOUNT=$(for i in $(cat /etc/passwd |egrep '\:x\:10[0-9][0-9]' |awk -F ':' {'print $6'}) ; do cat $i/.ssh/authorized_keys  2> /dev/null |grep ^ssh- |awk '{print substr($0, index($0,$3)) }'; done |wc -l)

## get system uptime
UPTIME=$(uptime |cut -c2- |cut -d, -f1)

## get maximum usable memory
MEMMAX=$(echo $(cat /proc/meminfo |egrep MemTotal |awk {'print $2'})/1024 |bc)

## get current free memory
MEMFREE=$(echo $(cat /proc/meminfo |egrep MemFree |awk {'print $2'})/1024 |bc)

## get maximum usable swap space
SWAPMAX=$(echo $(cat /proc/meminfo |egrep SwapTotal |awk {'print $2'})/1024 |bc)

## get current free swap space
SWAPFREE=$(echo $(cat /proc/meminfo |egrep SwapFree |awk {'print $2'})/1024 |bc)

## get current kernel version
UNAME=$(uname -r)

## get my fqdn hostname.domain.name.tld
HOSTNAME=$fqdn

## get my main ip
IP=$(hostname -I |awk {'print $1'})

## get system cpu model
CPUMODEL=$(cat /proc/cpuinfo |egrep 'model name' |uniq |awk -F ': ' {'print $2'})

## how many cpu i have
CPUS=$(cat /proc/cpuinfo|grep processor|wc -l)

## how many user logged in at the moment
SESSIONS=$(who |wc -l)

## get my username
WHOIAM=$(whoami)

## get my user id
ID=$(id)

## get runnig distribution name
if [ -f /etc/SuSE-release ]; then
        VERSION=$(cat /etc/SuSE-release |egrep SUSE -m 1)
        ## get the curernt installed patch level
        PATCHLEVEL=$(cat /etc/SuSE-release |egrep PATCHLEVEL |awk -F '= ' {'print $2'})
        DISTRIBUTION="$VERSION SP$PATCHLEVEL"
fi

## get runnig distribution name
if [ -f /etc/debian_version ]; then
        PATCHLEVEL=$(cat /etc/debian_version)
        DISTRIBUTION="Debian GNU/Linux $PATCHLEVEL"
fi

## get runnig distribution name
if [ -f /etc/redhat-release ]; then
        PATCHLEVEL=$(cat /etc/redhat-release)
        DISTRIBUTION="Linux $PATCHLEVEL"
fi



## get latest maintenance information
#MAINTENANCE1=$(cat /root/.maintenance)
function getmaintenance {
COUNT=1
while read line; do
    NAME=$line;
    echo "$COUNT $NAME"
    COUNT=$((COUNT+1))
done < /root/.maintenance
}
MAINTENANCE=$(getmaintenance)

## get current storage information, how many space are left :)
STORAGE=$(df -h |sed -e 's/^File.*$/\x1b[0;37m&\x1b[1;32m/' | sed -e 's/^Datei.*$/\x1b[0;37m&\x1b[1;32m/' |egrep -v docker )

## Main Menu
echo -e "
${F2}                ____                  _          ____
${F2}               / ___|  ___ _ __   ___| |__  _ __|  _ \ __ _ _   _
${F2}               \___ \ / _ \ '_ \ / _ \  _ \| '__| |_) / _  | | | |
${F2}                ___) |  __/ |_) |  __/ | | | |  |  __/ (_| | |_| |
${F2}               |____/ \___| .__/ \___|_| |_|_|  |_|   \__,_|\__, |
${F2}                          |_|                               |___/

					
			            Good $TIME $USER

${F2}============[ ${F1}System Data${F2} ]====================================================
${F1}     Hostname ${F2}= ${F3}$HOSTNAME
${F1}      Address ${F2}= ${F3}$IP
${F1} Distribution ${F2}= ${F3}\e[30;48;5;42m`cat /etc/redhat-release`\e[0m
${F1}       Uptime ${F2}= ${F3}$upDays days $upHours hours $upMins minutes $upSecs seconds
${F1}          CPU ${F2}= ${F3}$CPUS x $CPUMODEL
${F1}       Memory ${F2}= ${F3}$MEMFREE MB Free of $MEMMAX MB Total
${F1}  Swap Memory ${F2}= ${F3}$SWAPFREE MB Free of $SWAPMAX MB Total
${F1}    Processes ${F2}= ${F3}$PROCCOUNT of $PROCMAX MAX
${F1} CPU usage   ${F2} = $LOAD1, $LOAD5, $LOAD15 (1, 5, 15 min)
${F2}============[ ${F1}Storage Data${F2} ]===================================================
${F3}   Disk space ROOT =  $ROOT remaining
${F3}   Disk space HOME =  $HOME remaining
${F3}   Disk space VAR  =  $VAR remaining
${F2}============[ ${F1}User Data${F2} ]======================================================
${F1}     Username ${F2}= ${F3}$WHOIAM, ($APN)
${F1}     Sessions ${F2}= ${F3}[$SESSIONS] $LOGGEDIN
${F1}        Users ${F2}= Currently `users | wc -w` user(s) logged on
${F2}============[ ${F1}Maintenance Information${F2} ]========================================
${F4}$(getmaintenance)
${F2}=============================================================[ ${F1}$version${F2} ]==
${F1}
"
